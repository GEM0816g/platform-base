apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    bp-app: eulixplatform-services
  name: eulixplatform-services
  namespace: bp-cicada-rc
spec:
  replicas: 1
  selector:
    matchLabels:
      bp-app: eulixplatform-services
  template:
    metadata:
      labels:
        bp-app: eulixplatform-services
        version: "<TIMESTAMP>"
    spec:
      imagePullSecrets:
      - name: docker-registry-eulixcode-secret
      initContainers:
      - name: busybox
        image: busybox
        imagePullPolicy: IfNotPresent
        command: 
        - chown
        - -R
        - 1001:1001
        - /data/attachment
        volumeMounts:
        - name: eulixplatform-services
          mountPath: "/data/attachment"
        securityContext:
          privileged: true
      containers:
      - name: eulixplatform-services
        image: registry.eulix.xyz/bp/cicada/eulixplatform-services:release
        imagePullPolicy: Always
        env:
          - name: QUARKUS_DATASOURCE_USERNAME
            valueFrom:
              secretKeyRef:
                name: mid-mysql
                key: username
          - name: QUARKUS_DATASOURCE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mid-mysql
                key: password
          - name: QUARKUS_DATASOURCE_JDBC_URL
            value: jdbc:mysql://mid-mysql:3306/cicada-rc?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=GMT%2B8
          - name: APP_REGISTRY_SUBDOMAIN
            value: eulix.xyz
          - name: APP_REGISTRY_TUNNEL_SEVER_BASE_URL
            value: ts.platform.eulix.xyz
          - name: APP_REGISTRY_TUNNEL_SEVER_PORT
            value: "59000"
          - name: QUARKUS_OIDC_AUTH_SERVER_URL
            value: https://sso.eulix.xyz/auth/realms/eulix-oss
          - name: QUARKUS_OIDC_CREDENTIALS_SECRET
            value: 1c6abff6-3767-49d5-af7f-3bb5690f11b8
        ports:
        - containerPort: 8080
          name: services-http
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /platform/status
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /platform/status
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 3
        resources:
          requests:
            memory: "1024M"
            cpu: "100m"
          limits:
            memory: "4096M"
            cpu: "2000m"
        volumeMounts:
        - name: eulixplatform-services
          mountPath: "/data/attachment"
      volumes:
      - name: eulixplatform-services
        persistentVolumeClaim:
          claimName: eulixplatform-services

---
apiVersion: v1
kind: Service
metadata:
  name: eulixplatform-services
  namespace: bp-cicada-rc
  labels:
    bp-app: eulixplatform-services
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    bp-app: eulixplatform-services

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: eulixplatform-web
  namespace: bp-cicada-rc
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod-dns"
    nginx.ingress.kubernetes.io/permanent-redirect: "https://eulix.xyz/"
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/cors-allow-methods: '*'
    nginx.ingress.kubernetes.io/cors-expose-headers: '*'
    nginx.ingress.kubernetes.io/cors-allow-headers: 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,request-Id'
spec:
  tls:
  - hosts:
    - "*.eulix.xyz"
    secretName: ssl-eulix.xyz
  rules:
  - host: "*.eulix.xyz"
    http:
      paths:
      - path: /
        backend:
          serviceName: eulixplatform-services
          servicePort: 8080

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: eulixplatform-services
  namespace: bp-cicada-rc
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/cors-allow-methods: '*'
    nginx.ingress.kubernetes.io/cors-expose-headers: '*'
    nginx.ingress.kubernetes.io/cors-allow-headers: 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,request-Id'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite ^/platform$ /platform/ redirect;
spec:
  tls:
  - hosts:
    - services.eulix.xyz
    secretName: ssl-services.eulix.xyz
  rules:
  - host: services.eulix.xyz
    http:
      paths:
      - path: /platform
        backend:
          serviceName: eulixplatform-services
          servicePort: 8080


---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: eulixplatform-web-top
  namespace: bp-cicada-rc
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod-dns"
    nginx.ingress.kubernetes.io/permanent-redirect: "https://eulix.top/"
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/cors-allow-methods: '*'
    nginx.ingress.kubernetes.io/cors-expose-headers: '*'
    nginx.ingress.kubernetes.io/cors-allow-headers: 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,request-Id'
spec:
  tls:
  - hosts:
    - "*.eulix.top"
    secretName: ssl-eulix.top
  rules:
  - host: "*.eulix.top"
    http:
      paths:
      - path: /
        backend:
          serviceName: eulixplatform-services
          servicePort: 8080

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: eulixplatform-services-top
  namespace: bp-cicada-rc
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/cors-allow-methods: '*'
    nginx.ingress.kubernetes.io/cors-expose-headers: '*'
    nginx.ingress.kubernetes.io/cors-allow-headers: 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,request-Id'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite ^/platform$ /platform/ redirect;
spec:
  tls:
  - hosts:
    - services.eulix.top
    secretName: ssl-services.eulix.top
  rules:
  - host: services.eulix.top
    http:
      paths:
      - path: /platform
        backend:
          serviceName: eulixplatform-services
          servicePort: 8080

# Copyright (c) 2022 Institute of Software Chinese Academy of Sciences (ISCAS)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

image: registry.eulix.xyz/collab/infra/public-service/maven:3.6.3-openjdk-11

stages:
  - license_check
  - license_fix
  - validate
  - docker
  - manifest
  - sign
  - codelint
  - cloc

include:
  - project: 'bp/ams-ci-template'
    ref: main
    file: '/sonarqube.yml'
  - project: 'bp/ams-ci-template'
    ref: main
    file: '/license.yml'
  - project: 'bp/ams-ci-template'
    ref: main
    file: '/container.yml'
  - project: 'bp/ams-ci-template'
    ref: main
    file: '/sign.yml'
  - project: 'bp/ams-ci-template'
    ref: main
    file: '/cloc.yml'

variables:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"
  ENV_SONARQUBE_TYPE: maven
  ENV_LICENSE_TYPE: maven
  ENV_CONTAINER_NAME: eulixplatform-services
  LM_JAVA_VERSION: 11

cache:
  key: ${CI_JOB_NAME}
  paths:
    - .m2/repository
    - .sonar/cache

validate:build:
  stage: validate
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_MERGE_REQUEST_ID
  tags:
    - x86_64
  script:
    - mvn $MAVEN_CLI_OPTS test-compile

validate:test:
  stage: validate
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_MERGE_REQUEST_ID
  tags:
    - x86_64
  script:
    - mvn $MAVEN_CLI_OPTS verify
    - echo "The Jacoco Report URL：https://bp.pages.eulix.xyz/-/platform/eulixplatform-services/-/jobs/${CI_JOB_ID}/artifacts/eulixplatform-common/target/site/jacoco/index.html"
    - echo "The Jacoco Report URL：https://bp.pages.eulix.xyz/-/platform/eulixplatform-services/-/jobs/${CI_JOB_ID}/artifacts/eulixplatform-opstage/target/site/jacoco/index.html"
    - echo "The Jacoco Report URL：https://bp.pages.eulix.xyz/-/platform/eulixplatform-services/-/jobs/${CI_JOB_ID}/artifacts/eulixplatform-registry/target/site/jacoco/index.html"
  artifacts:
    paths:
      - target/
      - eulixplatform-opstage/target/
      - eulixplatform-common/target/
      - eulixplatform-registry/target/

package:x86_64:
  stage: validate
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH
    - if: $CI_MERGE_REQUEST_ID
  tags:
    - x86_64
  script:
    - mvn $MAVEN_CLI_OPTS package
    - wget https://gosspublic.alicdn.com/ossutil/1.7.13/ossutil64 -O /usr/bin/ossutil64 && chmod +x /usr/bin/ossutil64
    - ossutil64 -i $OSS_CI_EULIX_RES_ACCESS_ID -k $OSS_CI_EULIX_RES_ACCESS_KEY -e $OSS_CI_EULIX_RES_ENDPOINT cp eulixplatform-opstage/target/eulixplatform-opstage-*.jar -f $OSS_CI_EULIX_RES_BUCKET_DIR/eulixplatform-services/`head -1 VERSION`-alpha.$CI_PIPELINE_ID.jar
    - ossutil64 -i $OSS_CI_EULIX_RES_ACCESS_ID -k $OSS_CI_EULIX_RES_ACCESS_KEY -e $OSS_CI_EULIX_RES_ENDPOINT cp eulixplatform-common/target/eulixplatform-common-*.jar -f $OSS_CI_EULIX_RES_BUCKET_DIR/eulixplatform-common/`head -1 VERSION`-alpha.$CI_PIPELINE_ID.jar
    - ossutil64 -i $OSS_CI_EULIX_RES_ACCESS_ID -k $OSS_CI_EULIX_RES_ACCESS_KEY -e $OSS_CI_EULIX_RES_ENDPOINT cp eulixplatform-registry/target/eulixplatform-registry-*.jar -f $OSS_CI_EULIX_RES_BUCKET_DIR/eulixplatform-registry/`head -1 VERSION`-alpha.$CI_PIPELINE_ID.jar
  artifacts:
    paths:
      - eulixplatform-opstage/target/
      - eulixplatform-common/target/
      - eulixplatform-registry/target/

package:aarch64:
  stage: validate
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH
    - if: $CI_MERGE_REQUEST_ID
  tags:
    - aarch64
  script:
    - mvn $MAVEN_CLI_OPTS package
  artifacts:
    paths:
      - eulixplatform-opstage/target/
      - eulixplatform-common/target/
      - eulixplatform-registry/target/

package:x86_64:community:
  stage: validate
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH
    - if: $CI_MERGE_REQUEST_ID
  tags:
    - x86_64
  script:
    - mvn -pl eulixplatform-common,eulixplatform-registry $MAVEN_CLI_OPTS clean package -Pcommunity
  artifacts:
    paths:
      - eulixplatform-common/target/
      - eulixplatform-registry/target/

package:aarch64:community:
  stage: validate
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH
    - if: $CI_MERGE_REQUEST_ID
  tags:
    - aarch64
  script:
    - mvn -pl eulixplatform-common,eulixplatform-registry $MAVEN_CLI_OPTS clean package -Pcommunity
  artifacts:
    paths:
      - eulixplatform-common/target/
      - eulixplatform-registry/target/

docker:aarch64:community:
  stage: docker
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH
    - if: $CI_MERGE_REQUEST_ID
  variables:
    ENV_CONTAINER_NAME: eulixplatform-services-community
  tags: 
    - docker_build-aarch64
  dependencies: 
    - package:aarch64:community
  script:
    - docker login -u $DOCKER_AUTH_USERNAME -p $DOCKER_AUTH_PASSWORD $DOCKER_REGISTRY_HOST
    - export DOCKER_BUILD_IMAGE=$DOCKER_REGISTRY_IMAGE/$ENV_CONTAINER_NAME:`head -n 1 VERSION`-alpha.$CI_PIPELINE_ID
    - docker build --build-arg CI_PIPELINE_ID=$CI_PIPELINE_ID --build-arg CI_COMMIT_SHA=$CI_COMMIT_SHA -t $DOCKER_BUILD_IMAGE-aarch64 -f eulixplatform-registry/src/main/docker/Dockerfile.jvm eulixplatform-registry
    - docker push $DOCKER_BUILD_IMAGE-aarch64

docker:x86_64:community:
  stage: docker
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH
    - if: $CI_MERGE_REQUEST_ID
  variables:
    ENV_CONTAINER_NAME: eulixplatform-services-community
  tags: 
    - docker_build-x86_64
  dependencies: 
    - package:x86_64:community
  script:
    - docker login -u $DOCKER_AUTH_USERNAME -p $DOCKER_AUTH_PASSWORD $DOCKER_REGISTRY_HOST
    - export DOCKER_BUILD_IMAGE=$DOCKER_REGISTRY_IMAGE/$ENV_CONTAINER_NAME:`head -n 1 VERSION`-alpha.$CI_PIPELINE_ID
    - docker build --build-arg CI_PIPELINE_ID=$CI_PIPELINE_ID --build-arg CI_COMMIT_SHA=$CI_COMMIT_SHA -t $DOCKER_BUILD_IMAGE-x86_64 -f eulixplatform-registry/src/main/docker/Dockerfile.jvm eulixplatform-registry
    - docker push $DOCKER_BUILD_IMAGE-x86_64

manifest:push:community:
  stage: manifest
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH
  variables:
    ENV_CONTAINER_NAME: eulixplatform-services-community
  tags: 
    - docker_build
  retry: 2
  script:
    - docker login -u $GITLAB_DOCKER_AUTH_USERNAME -p $GITLAB_DOCKER_AUTH_PASSWORD $GITLAB_DOCKER_REGISTRY_HOST
    - docker login -u $DOCKER_AUTH_USERNAME -p $DOCKER_AUTH_PASSWORD $DOCKER_REGISTRY_HOST
    - export DOCKER_BUILD_IMAGE=$DOCKER_REGISTRY_IMAGE/$ENV_CONTAINER_NAME:`head -n 1 VERSION`-alpha.$CI_PIPELINE_ID
    - export DOCKER_LATEST_IMAGE=$DOCKER_REGISTRY_IMAGE/$ENV_CONTAINER_NAME:$CI_COMMIT_BRANCH
    - export DOCKER_BUILD_IMAGE_GITLAB=$GITLAB_DOCKER_REGISTRY_IMAGE/$ENV_CONTAINER_NAME:`head -n 1 VERSION`-alpha.$CI_PIPELINE_ID
    - export DOCKER_LATEST_IMAGE_GITLAB=$GITLAB_DOCKER_REGISTRY_IMAGE/$ENV_CONTAINER_NAME:$CI_COMMIT_BRANCH
    - sleep 10
    - export DOCKER_CLI_EXPERIMENTAL=enabled
    - docker pull $DOCKER_BUILD_IMAGE-x86_64
    - docker pull $DOCKER_BUILD_IMAGE-aarch64
    - docker tag $DOCKER_BUILD_IMAGE-x86_64 $DOCKER_BUILD_IMAGE_GITLAB-x86_64
    - docker push $DOCKER_BUILD_IMAGE_GITLAB-x86_64
    - docker tag $DOCKER_BUILD_IMAGE-aarch64 $DOCKER_BUILD_IMAGE_GITLAB-aarch64
    - docker push $DOCKER_BUILD_IMAGE_GITLAB-aarch64
    - docker manifest create --amend $DOCKER_BUILD_IMAGE $DOCKER_BUILD_IMAGE-aarch64 $DOCKER_BUILD_IMAGE-x86_64
    - docker manifest annotate --os linux --arch amd64 $DOCKER_BUILD_IMAGE $DOCKER_BUILD_IMAGE-x86_64
    - docker manifest annotate --os linux --arch arm64 $DOCKER_BUILD_IMAGE $DOCKER_BUILD_IMAGE-aarch64
    - docker manifest push -p $DOCKER_BUILD_IMAGE
    - docker manifest create --amend $DOCKER_LATEST_IMAGE $DOCKER_BUILD_IMAGE-aarch64 $DOCKER_BUILD_IMAGE-x86_64
    - docker manifest annotate --os linux --arch amd64 $DOCKER_LATEST_IMAGE $DOCKER_BUILD_IMAGE-x86_64
    - docker manifest annotate --os linux --arch arm64 $DOCKER_LATEST_IMAGE $DOCKER_BUILD_IMAGE-aarch64
    - docker manifest push -p $DOCKER_LATEST_IMAGE
    - docker manifest create --amend $DOCKER_BUILD_IMAGE_GITLAB $DOCKER_BUILD_IMAGE_GITLAB-aarch64 $DOCKER_BUILD_IMAGE_GITLAB-x86_64
    - docker manifest annotate --os linux --arch amd64 $DOCKER_BUILD_IMAGE_GITLAB $DOCKER_BUILD_IMAGE_GITLAB-x86_64
    - docker manifest annotate --os linux --arch arm64 $DOCKER_BUILD_IMAGE_GITLAB $DOCKER_BUILD_IMAGE_GITLAB-aarch64
    - docker manifest push -p $DOCKER_BUILD_IMAGE_GITLAB
    - docker manifest create --amend $DOCKER_LATEST_IMAGE_GITLAB $DOCKER_BUILD_IMAGE_GITLAB-aarch64 $DOCKER_BUILD_IMAGE_GITLAB-x86_64
    - docker manifest annotate --os linux --arch amd64 $DOCKER_LATEST_IMAGE_GITLAB $DOCKER_BUILD_IMAGE_GITLAB-x86_64
    - docker manifest annotate --os linux --arch arm64 $DOCKER_LATEST_IMAGE_GITLAB $DOCKER_BUILD_IMAGE_GITLAB-aarch64
    - docker manifest push -p $DOCKER_LATEST_IMAGE_GITLAB

manifest:merge_request:community:
  stage: manifest
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_MERGE_REQUEST_ID
  variables:
    ENV_CONTAINER_NAME: eulixplatform-services-community
  tags: 
    - docker_build
  retry: 2
  script:
    - docker login -u $GITLAB_DOCKER_AUTH_USERNAME -p $GITLAB_DOCKER_AUTH_PASSWORD $GITLAB_DOCKER_REGISTRY_HOST
    - docker login -u $DOCKER_AUTH_USERNAME -p $DOCKER_AUTH_PASSWORD $DOCKER_REGISTRY_HOST
    - export DOCKER_BUILD_IMAGE=$DOCKER_REGISTRY_IMAGE/$ENV_CONTAINER_NAME:`head -n 1 VERSION`-alpha.$CI_PIPELINE_ID
    - export DOCKER_LATEST_IMAGE=$DOCKER_REGISTRY_IMAGE/$ENV_CONTAINER_NAME:$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - export DOCKER_BUILD_IMAGE_GITLAB=$GITLAB_DOCKER_REGISTRY_IMAGE/$ENV_CONTAINER_NAME:`head -n 1 VERSION`-alpha.$CI_PIPELINE_ID
    - export DOCKER_LATEST_IMAGE_GITLAB=$GITLAB_DOCKER_REGISTRY_IMAGE/$ENV_CONTAINER_NAME:$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - sleep 10
    - export DOCKER_CLI_EXPERIMENTAL=enabled
    - docker pull $DOCKER_BUILD_IMAGE-x86_64
    - docker pull $DOCKER_BUILD_IMAGE-aarch64
    - docker tag $DOCKER_BUILD_IMAGE-x86_64 $DOCKER_BUILD_IMAGE_GITLAB-x86_64
    - docker push $DOCKER_BUILD_IMAGE_GITLAB-x86_64
    - docker tag $DOCKER_BUILD_IMAGE-aarch64 $DOCKER_BUILD_IMAGE_GITLAB-aarch64
    - docker push $DOCKER_BUILD_IMAGE_GITLAB-aarch64
    - docker manifest create --amend $DOCKER_BUILD_IMAGE $DOCKER_BUILD_IMAGE-aarch64 $DOCKER_BUILD_IMAGE-x86_64
    - docker manifest annotate --os linux --arch amd64 $DOCKER_BUILD_IMAGE $DOCKER_BUILD_IMAGE-x86_64
    - docker manifest annotate --os linux --arch arm64 $DOCKER_BUILD_IMAGE $DOCKER_BUILD_IMAGE-aarch64
    - docker manifest push -p $DOCKER_BUILD_IMAGE
    - docker manifest create --amend $DOCKER_LATEST_IMAGE $DOCKER_BUILD_IMAGE-aarch64 $DOCKER_BUILD_IMAGE-x86_64
    - docker manifest annotate --os linux --arch amd64 $DOCKER_LATEST_IMAGE $DOCKER_BUILD_IMAGE-x86_64
    - docker manifest annotate --os linux --arch arm64 $DOCKER_LATEST_IMAGE $DOCKER_BUILD_IMAGE-aarch64
    - docker manifest push -p $DOCKER_LATEST_IMAGE
    - docker manifest create --amend $DOCKER_BUILD_IMAGE_GITLAB $DOCKER_BUILD_IMAGE_GITLAB-aarch64 $DOCKER_BUILD_IMAGE_GITLAB-x86_64
    - docker manifest annotate --os linux --arch amd64 $DOCKER_BUILD_IMAGE_GITLAB $DOCKER_BUILD_IMAGE_GITLAB-x86_64
    - docker manifest annotate --os linux --arch arm64 $DOCKER_BUILD_IMAGE_GITLAB $DOCKER_BUILD_IMAGE_GITLAB-aarch64
    - docker manifest push -p $DOCKER_BUILD_IMAGE_GITLAB
    - docker manifest create --amend $DOCKER_LATEST_IMAGE_GITLAB $DOCKER_BUILD_IMAGE_GITLAB-aarch64 $DOCKER_BUILD_IMAGE_GITLAB-x86_64
    - docker manifest annotate --os linux --arch amd64 $DOCKER_LATEST_IMAGE_GITLAB $DOCKER_BUILD_IMAGE_GITLAB-x86_64
    - docker manifest annotate --os linux --arch arm64 $DOCKER_LATEST_IMAGE_GITLAB $DOCKER_BUILD_IMAGE_GITLAB-aarch64
    - docker manifest push -p $DOCKER_LATEST_IMAGE_GITLAB

artifacts-sign:push:community:
  stage: sign
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH
  variables:
    ENV_CONTAINER_NAME: eulixplatform-services-community
  image:
    name: registry.eulix.xyz/collab/infra/infrastructure/sigstore/cosign:v1.10.1
    entrypoint: [''] 
  before_script:
    - cosign login -u $GITLAB_DOCKER_AUTH_USERNAME -p $GITLAB_DOCKER_AUTH_PASSWORD $GITLAB_DOCKER_REGISTRY_HOST
    - cosign login -u $DOCKER_AUTH_USERNAME -p $DOCKER_AUTH_PASSWORD $DOCKER_REGISTRY_HOST
    - export DOCKER_BUILD_IMAGE=$DOCKER_REGISTRY_IMAGE/$ENV_CONTAINER_NAME:`head -1 VERSION`-alpha.$CI_PIPELINE_ID
    - export DOCKER_LATEST_IMAGE=$DOCKER_REGISTRY_IMAGE/$ENV_CONTAINER_NAME:$CI_COMMIT_BRANCH
    - export DOCKER_BUILD_IMAGE_GITLAB=$GITLAB_DOCKER_REGISTRY_IMAGE/$ENV_CONTAINER_NAME:`head -1 VERSION`-alpha.$CI_PIPELINE_ID
    - export DOCKER_LATEST_IMAGE_GITLAB=$GITLAB_DOCKER_REGISTRY_IMAGE/$ENV_CONTAINER_NAME:$CI_COMMIT_BRANCH
    - echo $COSIGN_KEY | base64 -d > /tmp/cosign.key
  script:
    - cosign sign --key /tmp/cosign.key $DOCKER_BUILD_IMAGE
    - cosign sign --key /tmp/cosign.key $DOCKER_LATEST_IMAGE
    - cosign sign --key /tmp/cosign.key $DOCKER_BUILD_IMAGE_GITLAB
    - cosign sign --key /tmp/cosign.key $DOCKER_LATEST_IMAGE_GITLAB

artifacts-sign:merge_request:community:
  stage: sign
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_MERGE_REQUEST_ID
  variables:
    ENV_CONTAINER_NAME: eulixplatform-services-community
  image:
    name: registry.eulix.xyz/collab/infra/infrastructure/sigstore/cosign:v1.10.1
    entrypoint: [''] 
  before_script:
    - cosign login -u $GITLAB_DOCKER_AUTH_USERNAME -p $GITLAB_DOCKER_AUTH_PASSWORD $GITLAB_DOCKER_REGISTRY_HOST
    - cosign login -u $DOCKER_AUTH_USERNAME -p $DOCKER_AUTH_PASSWORD $DOCKER_REGISTRY_HOST
    - export DOCKER_BUILD_IMAGE=$DOCKER_REGISTRY_IMAGE/$ENV_CONTAINER_NAME:`head -1 VERSION`-alpha.$CI_PIPELINE_ID
    - export DOCKER_LATEST_IMAGE=$DOCKER_REGISTRY_IMAGE/$ENV_CONTAINER_NAME:$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - export DOCKER_BUILD_IMAGE_GITLAB=$GITLAB_DOCKER_REGISTRY_IMAGE/$ENV_CONTAINER_NAME:`head -1 VERSION`-alpha.$CI_PIPELINE_ID
    - export DOCKER_LATEST_IMAGE_GITLAB=$GITLAB_DOCKER_REGISTRY_IMAGE/$ENV_CONTAINER_NAME:$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - echo $COSIGN_KEY | base64 -d > /tmp/cosign.key
  script:
    - cosign sign --key /tmp/cosign.key $DOCKER_BUILD_IMAGE
    - cosign sign --key /tmp/cosign.key $DOCKER_LATEST_IMAGE
    - cosign sign --key /tmp/cosign.key $DOCKER_BUILD_IMAGE_GITLAB
    - cosign sign --key /tmp/cosign.key $DOCKER_LATEST_IMAGE_GITLAB
